#Even Fibonacci numbers

=begin

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

=end

# Outputs fibonacci sequence as arrray
def fibonacci_generator(max)
  fibonacci_nums = [0,1]
  current = 0
  i=2

  while current<max
    current = fibonacci_nums[i-2] + fibonacci_nums[i-1]
    fibonacci_nums << current

    i+=1
  end

  fibonacci_nums
end

def even_sums(max)
  arr = fibonacci_generator(max)
  sum=0

  arr.each do |value|
    sum += value if value%2==0
  end

  puts sum
end

even_sums(4000000)



=begin
#Generate nth term of fibonacci sequence
#Uses cache to significantly speed up process

  @cache = {}; @cache[1]=1; @cache[2]=1
  def fibonacci(n)
    @cache[n] ||=fibonacci(n-1) + fibonacci(n-2)
  end

puts fibonacci(900)

=end
